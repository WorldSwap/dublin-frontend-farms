{"version":3,"sources":["config/constants/types.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","state/hooks.ts","components/layout/Container.tsx","components/layout/Page.tsx","contexts/RefreshContext.tsx","state/actions.ts","hooks/useRefresh.ts","hooks/useWeb3.ts","hooks/useContract.ts","components/UnlockButton.tsx","config/constants/index.ts","config/constants/contracts.ts","edition.tsx","utils/addressHelpers.ts","utils/multicall.ts","config/constants/pools.ts","config/constants/farms.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useReferral.ts","views/Referrals/components/ReferralCard.tsx","views/Referrals/Referrals.tsx","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts"],"names":["QuoteToken","PoolCategory","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","i","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","perBlockKey","edition","tokenKeyMasterChef","masterChefABI","pid","info","totalAllocPoint","wsPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","capitalize","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","busdBnbPid","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","totalToken","val","BNB","CAKE","plus","Container","styled","theme","mediaQueries","sm","Page","lg","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","fastRefresh","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","web3","setweb3","current","useContract","abi","contractOptions","eth","Contract","contract","setContract","useCake","getCakeAddress","useLottery","lottery","getLotteryAddress","useMasterchef","useReferralContract","referral","geReferralContractAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","UnlockButton","props","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","filter","isCommunity","cake","token","dub","56","97","ams","masterChef","wbnb","lotteryNFT","mulltiCall","busd","btcb","doge","usdt","dai","usdc","uni","oneinch","ada","dot","link","vai","realcake","Date","key","tokenAddress","amsterdamConfig","tokenBnbPid","tokenPoolPid","referrals","enabled","amsterdamMasterChefABI","priceLink","startTime","startBlock","logoText","logoUrl","homeSecondaryTitle","homeHeroImg1","homeHeroImg2","homeStakingCardBackground","farmPrimaryTitle","farmSecondaryTitle","poolPrimaryTitle","poolSecondaryTitle","bottomIllustration","src","alt","width","height","responsive","addresses","chainId","getMulticallAddress","getWbnbAddress","getLotteryTicketAddress","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","pools","dublin","risk","lpSymbol","contracts","amsterdam","nonBnbPools","p","stakingTokenName","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","stakingTokenAddress","allowances","reduce","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","methodName","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","useReferrals","referralContract","referralsCount","setReferralsCount","loading","setLoading","then","finally","StyledReferralCard","Card","ReferralCard","style","fontSize","marginBottom","marginTop","Referrals","as","size","color","mb","textAlign","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","fetch","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","useTheme","StyledThemeCopntext","getMenuLinks","Menu","cakePriceUsd","login","logout","currentLang","langs","setLang","links","Wrapper","PageLoader","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","onDismiss","title","href","NftGlobalNotification","useModal","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","document","location","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","ref","URLSearchParams","search","get","basename","Global","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","getContract","nodes","getNodeUrl","randomIndex","random","defaultTranslationState"],"mappings":"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","file":"static/js/main.866d10a8.chunk.js","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  tokenDecimals?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import BigNumber from 'bignumber.js'\nimport { edition } from 'edition'\nimport erc20 from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig, i) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceLP, quoteTokenBlanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n        await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const perBlockKey = `${edition.tokenKeyMasterChef}PerBlock`\n      const [info, totalAllocPoint, wsPerBlock] = await multicall(edition.masterChefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: perBlockKey,\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        [perBlockKey]: new BigNumber(wsPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { capitalize } from 'lodash'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { edition } from 'edition'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(edition.masterChefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: `pending${capitalize(edition.tokenKeyMasterChef)}`,\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(edition.masterChefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { edition } from 'edition'\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = edition.busdBnbPid // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0 // WS-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    let totalToken: BigNumber | string = farm.lpTotalInQuoteToken\n    if (totalToken && farm.lpTotalInQuoteToken) {\n      // fix tvl for non 18-decimal tokens\n      if (farm.tokenDecimals && farm.tokenDecimals < 18) {\n        if (!(totalToken instanceof BigNumber)) {\n          totalToken = new BigNumber(totalToken)\n        }\n        totalToken = totalToken.div(10 ** (18 - farm.tokenDecimals))\n      }\n\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(totalToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(totalToken)\n      } else {\n        val = totalToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  geReferralContractAddress,\n} from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport referral from 'config/abi/referral.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport { edition } from 'edition'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = ifo as unknown as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = erc20 as unknown as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = rabbitmintingfarm as unknown as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = pancakeRabbits as unknown as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = lottery as unknown as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = lotteryTicket as unknown as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = edition.masterChefABI as unknown as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useReferralContract = () => {\n  const abi = referral as unknown as AbiItem\n  return useContract(abi, geReferralContractAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = rawAbi as unknown as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { edition } from 'edition'\n\nexport default {\n  cake: edition.config.token,\n\n  // Dublin Token\n  dub: {\n    56: '0xc052568af1b80157d0640afb0df82712a98aa931',\n    97: '',\n  },\n  ams: {\n    56: '0xA0d671606b5a4a75917e45dc1A00c11C66F9F113',\n    97: '',\n  },\n\n  masterChef: edition.config.masterChef,\n  referral: edition.config.referral,\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '',\n  },\n  btcb: {\n    56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    97: '',\n  },\n  eth: {\n    56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    97: '',\n  },\n  doge: {\n    56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059ff775485246999027b3197955',\n    97: '',\n  },\n  dai: {\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    97: '',\n  },\n  usdc: {\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    97: '',\n  },\n  uni: {\n    56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    97: '',\n  },\n  oneinch: {\n    56: '0x111111111117dC0aa78b770fA6A738034120C302',\n    97: '',\n  },\n  ada: {\n    56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n    97: '',\n  },\n  dot: {\n    56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    97: '',\n  },\n  link: {\n    56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n    97: '',\n  },\n  vai: {\n    56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n    97: '',\n  },\n  realcake: {\n    // TODO\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    97: '',\n  },\n}\n","import React from 'react'\nimport { Image } from '@pancakeswap-libs/uikit'\nimport dublinMasterChefABI from 'config/abi/dublin/masterchef.json'\nimport amsterdamMasterChefABI from 'config/abi/amsterdam/masterchef.json'\nimport dublinConfig from 'dublin-config.json'\nimport amsterdamConfig from 'amsterdam-config.json'\n\nexport const dublin = {\n  key: 'dublin',\n  tokenSymbol: 'DUB',\n  tokenAddress: '0xc052568af1b80157d0640afb0df82712a98aa931',\n  config: dublinConfig,\n  tokenBnbPid: 12,\n  busdBnbPid: 14,\n  tokenPoolPid: 1,\n  referrals: {\n    enabled: false,\n  },\n  tokenKeyMasterChef: 'dub',\n  masterChefABI: dublinMasterChefABI,\n\n  priceLink: 'https://poocoin.app/tokens/0xc052568af1b80157d0640afb0df82712a98aa931',\n\n  startTime: new Date('05/15/2021 13:27:00 UTC'),\n  startBlock: '7432000',\n\n  logoText: 'World Swap - Dublin Edition ☘️',\n  logoUrl: '/images/farms/dub.png',\n\n  homeSecondaryTitle: 'Dublin Edition ☘️ 🇮🇪 💚',\n  homeHeroImg1: '/images/dublin/dub1.png',\n  homeHeroImg2: '/images/dublin/dub2.png',\n  homeStakingCardBackground: '/images/dublin/clover-bg.png',\n\n  farmPrimaryTitle: 'Stake LP tokens to earn DUB ☘️',\n  farmSecondaryTitle: 'Welcome to Dublin: The first edition of World Swap',\n  poolPrimaryTitle: 'Stake tokens to earn DUB ☘️',\n  poolSecondaryTitle: 'Welcome to Dublin: The first edition of World Swap',\n\n  bottomIllustration: (\n    <Image src=\"/images/dublin/guinness.png\" alt=\"illustration\" width={1352} height={587} responsive />\n  ),\n}\n\nexport const amsterdam = {\n  key: 'amsterdam',\n  tokenSymbol: 'AMS',\n  tokenAddress: '0xA0d671606b5a4a75917e45dc1A00c11C66F9F113',\n  config: amsterdamConfig,\n  tokenBnbPid: 1,\n  busdBnbPid: 2,\n  tokenPoolPid: 18,\n  referrals: {\n    enabled: true,\n  },\n  tokenKeyMasterChef: 'ws',\n  masterChefABI: amsterdamMasterChefABI,\n\n  priceLink: 'https://poocoin.app/tokens/0xA0d671606b5a4a75917e45dc1A00c11C66F9F113',\n\n  startTime: new Date('05/19/2021 13:15:00 UTC'),\n  startBlock: '7545400',\n\n  logoText: 'World Swap - Amsterdam Edition 🇳🇱',\n  logoUrl: '/images/farms/ams.svg',\n\n  homeSecondaryTitle: 'Amsterdam Edition 🇳🇱 🚴‍♂️',\n  homeHeroImg1: '/images/amsterdam/ams1.svg',\n  homeHeroImg2: '/images/amsterdam/ams2.svg',\n  homeStakingCardBackground: '/images/amsterdam/ams-card.png',\n\n  farmPrimaryTitle: 'Stake LP tokens to earn AMS 🇳🇱 🚴‍♂️',\n  farmSecondaryTitle: 'Welcome to Amsterdam: The second edition of World Swap',\n  poolPrimaryTitle: 'Stake tokens to earn AMS 🇳🇱 🚴‍♂️',\n  poolSecondaryTitle: 'Welcome to Amsterdam: The second edition of World Swap',\n\n  bottomIllustration: (\n    <Image src=\"/images/amsterdam/ams-background.png\" alt=\"illustration\" width={1352} height={900} responsive />\n  ),\n}\n\nexport const edition = amsterdam\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const geReferralContractAddress = () => {\n  return addresses.referral[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { edition } from 'edition'\nimport contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst editionFarms = {\n  dublin: [\n    {\n      pid: 0,\n      risk: 5,\n      lpSymbol: 'DUB-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x6433a87b129c125B05cbA88855C21B520305e462',\n      },\n      tokenSymbol: 'DUB',\n      tokenAddresses: contracts.dub,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 12,\n      risk: 5,\n      lpSymbol: 'DUB-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x93b8F88c546Bcea23860A5ad2C73824E4C338C30',\n      },\n      tokenSymbol: 'DUB',\n      tokenAddresses: contracts.dub,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 14,\n      risk: 3,\n      lpSymbol: 'BNB-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n      },\n      tokenSymbol: 'BNB',\n      tokenAddresses: {\n        97: '',\n        56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      },\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 3,\n      risk: 1,\n      lpSymbol: 'DOGE-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0xac109C8025F272414fd9e2faA805a583708A017f',\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 4,\n      risk: 2,\n      lpSymbol: 'DOGE-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0xE27859308ae2424506D1ac7BF5bcb92D6a73e211',\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 5,\n      risk: 2,\n      lpSymbol: 'USDT-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n      },\n      tokenSymbol: 'USDT',\n      tokenAddresses: contracts.usdt,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 6,\n      risk: 1,\n      lpSymbol: 'BTCB-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n      },\n      tokenSymbol: 'BTCB',\n      tokenAddresses: contracts.btcb,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 7,\n      risk: 1,\n      lpSymbol: 'ETH-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n      },\n      tokenSymbol: 'ETH',\n      tokenAddresses: contracts.eth,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 8,\n      risk: 3,\n      lpSymbol: 'DAI-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n      },\n      tokenSymbol: 'DAI',\n      tokenAddresses: contracts.dai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 9,\n      risk: 4,\n      lpSymbol: 'USDC-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n      },\n      tokenSymbol: 'USDC',\n      tokenAddresses: contracts.usdc,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 10,\n      risk: 4,\n      lpSymbol: 'UNI-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n      },\n      tokenSymbol: 'UNI',\n      tokenAddresses: contracts.uni,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 24,\n      risk: 4,\n      lpSymbol: '1INCH-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x38B22083c11538ffD534938ed5fba408a6568552',\n      },\n      tokenSymbol: '1INCH',\n      tokenAddresses: contracts.oneinch,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 1,\n      risk: 5,\n      isTokenOnly: true,\n      lpSymbol: 'DUB',\n      lpAddresses: {\n        97: '',\n        56: '0x6433a87b129c125B05cbA88855C21B520305e462', // DUB-BUSD LP\n      },\n      tokenSymbol: 'DUB',\n      tokenAddresses: contracts.dub,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 13,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'BUSD',\n      lpAddresses: {\n        97: '',\n        56: '0x6433a87b129c125B05cbA88855C21B520305e462', // DUB-BUSD LP (BUSD-BUSD will ignore)\n      },\n      tokenSymbol: 'BUSD',\n      tokenAddresses: contracts.busd,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 2,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'WBNB',\n      lpAddresses: {\n        97: '',\n        56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BNB-BUSD LP\n      },\n      tokenSymbol: 'WBNB',\n      tokenAddresses: contracts.wbnb,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 15,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'DOGE',\n      lpAddresses: {\n        97: '',\n        56: '0xE27859308ae2424506D1ac7BF5bcb92D6a73e211', // DOGE-BUSD LP\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      tokenDecimals: 8,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 16,\n      risk: 2,\n      isTokenOnly: true,\n      lpSymbol: 'BTCB',\n      lpAddresses: {\n        97: '',\n        56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33', // BTCB-BUSD LP\n      },\n      tokenSymbol: 'BTCB',\n      tokenAddresses: contracts.btcb,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 17,\n      risk: 2,\n      isTokenOnly: true,\n      lpSymbol: 'ETH',\n      lpAddresses: {\n        97: '',\n        56: '0x7213a321F1855CF1779f42c0CD85d3D95291D34C', // ETH-BUSD LP\n      },\n      tokenSymbol: 'ETH',\n      tokenAddresses: contracts.eth,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 18,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'USDT',\n      lpAddresses: {\n        97: '',\n        56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00', // USDT-BUSD LP\n      },\n      tokenSymbol: 'USDT',\n      tokenAddresses: contracts.usdt,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 19,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'DAI',\n      lpAddresses: {\n        97: '',\n        56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489', // DAI-BUSD LP\n      },\n      tokenSymbol: 'DAI',\n      tokenAddresses: contracts.dai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 20,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'USDC',\n      lpAddresses: {\n        97: '',\n        56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1', // USDC-BUSD LP\n      },\n      tokenSymbol: 'USDC',\n      tokenAddresses: contracts.usdc,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 21,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'UNI',\n      lpAddresses: {\n        97: '',\n        56: '0x0E91275Aec7473105c8509BC41AE54b8FE8a7Fc3', // UNI-BUSD LP\n      },\n      tokenSymbol: 'UNI',\n      tokenAddresses: contracts.uni,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 22,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: '1INCH',\n      lpAddresses: {\n        97: '',\n        56: '0x38B22083c11538ffD534938ed5fba408a6568552', // 1INCH-BUSD LP\n      },\n      tokenSymbol: '1INCH',\n      tokenAddresses: contracts.oneinch,\n      quoteTokenSymbol: 'DUB',\n      quoteTokenAdresses: contracts.dub,\n    },\n    {\n      pid: 23,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'CAKE',\n      lpAddresses: {\n        97: '',\n        56: '0x804678fa97d91B974ec2af3c843270886528a9E6', // CAKE-BUSD LP\n      },\n      tokenSymbol: 'CAKE',\n      tokenAddresses: {\n        97: '',\n        56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      },\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n  ],\n\n  amsterdam: [\n    {\n      pid: 0,\n      risk: 5,\n      lpSymbol: 'AMS-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x776ff626e9792997d9aAdb7D8A141cA1C29DC095',\n      },\n      tokenSymbol: 'AMS',\n      tokenAddresses: contracts.ams,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 1,\n      risk: 5,\n      lpSymbol: 'AMS-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x576c2A197ABdd359d5b02aa70a113F72bE4a6670',\n      },\n      tokenSymbol: 'AMS',\n      tokenAddresses: contracts.ams,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 2,\n      risk: 3,\n      lpSymbol: 'BNB-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n      },\n      tokenSymbol: 'BNB',\n      tokenAddresses: contracts.wbnb,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 3,\n      risk: 1,\n      lpSymbol: 'DOGE-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0xac109C8025F272414fd9e2faA805a583708A017f',\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 4,\n      risk: 2,\n      lpSymbol: 'DOGE-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0xE27859308ae2424506D1ac7BF5bcb92D6a73e211',\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 5,\n      risk: 2,\n      lpSymbol: 'USDT-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n      },\n      tokenSymbol: 'USDT',\n      tokenAddresses: contracts.usdt,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 6,\n      risk: 1,\n      lpSymbol: 'BTCB-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n      },\n      tokenSymbol: 'BTCB',\n      tokenAddresses: contracts.btcb,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 7,\n      risk: 1,\n      lpSymbol: 'ETH-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n      },\n      tokenSymbol: 'ETH',\n      tokenAddresses: contracts.eth,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 8,\n      risk: 3,\n      lpSymbol: 'DAI-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n      },\n      tokenSymbol: 'DAI',\n      tokenAddresses: contracts.dai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 9,\n      risk: 4,\n      lpSymbol: 'USDC-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n      },\n      tokenSymbol: 'USDC',\n      tokenAddresses: contracts.usdc,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 10,\n      risk: 4,\n      lpSymbol: 'UNI-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n      },\n      tokenSymbol: 'UNI',\n      tokenAddresses: contracts.uni,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 11,\n      risk: 4,\n      lpSymbol: '1INCH-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x38B22083c11538ffD534938ed5fba408a6568552',\n      },\n      tokenSymbol: '1INCH',\n      tokenAddresses: contracts.oneinch,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 12,\n      risk: 4,\n      lpSymbol: 'ADA-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n      },\n      tokenSymbol: 'ADA',\n      tokenAddresses: contracts.ada,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 13,\n      risk: 4,\n      lpSymbol: 'DOT-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n      },\n      tokenSymbol: 'DOT',\n      tokenAddresses: contracts.dot,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 14,\n      risk: 4,\n      lpSymbol: 'VAI-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n      },\n      tokenSymbol: 'VAI',\n      tokenAddresses: contracts.vai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 15,\n      risk: 4,\n      lpSymbol: 'LINK-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n      },\n      tokenSymbol: 'LINK',\n      tokenAddresses: contracts.link,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 16,\n      risk: 4,\n      lpSymbol: 'CAKE-BUSD LP',\n      lpAddresses: {\n        97: '',\n        56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n      },\n      tokenSymbol: 'CAKE',\n      tokenAddresses: contracts.realcake,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 17,\n      risk: 4,\n      lpSymbol: 'CAKE-BNB LP',\n      lpAddresses: {\n        97: '',\n        56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n      },\n      tokenSymbol: 'CAKE',\n      tokenAddresses: contracts.realcake,\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n      pid: 18,\n      risk: 5,\n      isTokenOnly: true,\n      lpSymbol: 'AMS',\n      lpAddresses: {\n        97: '',\n        56: '0x776ff626e9792997d9aAdb7D8A141cA1C29DC095', // AMS-BUSD LP\n      },\n      tokenSymbol: 'AMS',\n      tokenAddresses: contracts.ams,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 19,\n      risk: 5,\n      isTokenOnly: true,\n      lpSymbol: 'DUB',\n      lpAddresses: {\n        97: '',\n        56: '0x6433a87b129c125B05cbA88855C21B520305e462', // DUB-BUSD LP\n      },\n      tokenSymbol: 'DUB',\n      tokenAddresses: contracts.dub,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 20,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'BUSD',\n      lpAddresses: {\n        97: '',\n        56: '0x6433a87b129c125B05cbA88855C21B520305e462', // AMS-BUSD LP (BUSD-BUSD will ignore)\n      },\n      tokenSymbol: 'BUSD',\n      tokenAddresses: contracts.busd,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 21,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'WBNB',\n      lpAddresses: {\n        97: '',\n        56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BNB-BUSD LP\n      },\n      tokenSymbol: 'WBNB',\n      tokenAddresses: contracts.wbnb,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 22,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'DOGE',\n      lpAddresses: {\n        97: '',\n        56: '0xE27859308ae2424506D1ac7BF5bcb92D6a73e211', // DOGE-BUSD LP\n      },\n      tokenSymbol: 'DOGE',\n      tokenAddresses: contracts.doge,\n      tokenDecimals: 8,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 23,\n      risk: 2,\n      isTokenOnly: true,\n      lpSymbol: 'BTCB',\n      lpAddresses: {\n        97: '',\n        56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33', // BTCB-BUSD LP\n      },\n      tokenSymbol: 'BTCB',\n      tokenAddresses: contracts.btcb,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 24,\n      risk: 2,\n      isTokenOnly: true,\n      lpSymbol: 'ETH',\n      lpAddresses: {\n        97: '',\n        56: '0x7213a321F1855CF1779f42c0CD85d3D95291D34C', // ETH-BUSD LP\n      },\n      tokenSymbol: 'ETH',\n      tokenAddresses: contracts.eth,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 25,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'USDT',\n      lpAddresses: {\n        97: '',\n        56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00', // USDT-BUSD LP\n      },\n      tokenSymbol: 'USDT',\n      tokenAddresses: contracts.usdt,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 26,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'DAI',\n      lpAddresses: {\n        97: '',\n        56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489', // DAI-BUSD LP\n      },\n      tokenSymbol: 'DAI',\n      tokenAddresses: contracts.dai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 27,\n      risk: 1,\n      isTokenOnly: true,\n      lpSymbol: 'USDC',\n      lpAddresses: {\n        97: '',\n        56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1', // USDC-BUSD LP\n      },\n      tokenSymbol: 'USDC',\n      tokenAddresses: contracts.usdc,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 28,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: 'UNI',\n      lpAddresses: {\n        97: '',\n        56: '0x0E91275Aec7473105c8509BC41AE54b8FE8a7Fc3', // UNI-BUSD LP\n      },\n      tokenSymbol: 'UNI',\n      tokenAddresses: contracts.uni,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 29,\n      risk: 3,\n      isTokenOnly: true,\n      lpSymbol: '1INCH',\n      lpAddresses: {\n        97: '',\n        56: '0xe193cC411C0f83A6322abCE2c4FD9987F9741Af8', // 1INCH-BUSD LP\n      },\n      tokenSymbol: '1INCH',\n      tokenAddresses: contracts.oneinch,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 30,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'CAKE',\n      lpAddresses: {\n        97: '',\n        56: '0x804678fa97d91B974ec2af3c843270886528a9E6', // CAKE-BUSD LP\n      },\n      tokenSymbol: 'CAKE',\n      tokenAddresses: contracts.realcake,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 31,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'VAI',\n      lpAddresses: {\n        97: '',\n        56: '0x133ee93FE93320e1182923E1a640912eDE17C90C', // VAI-BUSD LP\n      },\n      tokenSymbol: 'VAI',\n      tokenAddresses: contracts.vai,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 32,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'DOT',\n      lpAddresses: {\n        97: '',\n        56: '0x9fDaaB9312084298d210B8789629D3054230e998', // DOT-BUSD LP\n      },\n      tokenSymbol: 'DOT',\n      tokenAddresses: contracts.dot,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 33,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'ADA',\n      lpAddresses: {\n        97: '',\n        56: '0x1E249DF2F58cBef7EAc2b0EE35964ED8311D5623', // ADA-BUSD LP\n      },\n      tokenSymbol: 'ADA',\n      tokenAddresses: contracts.ada,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n    {\n      pid: 34,\n      risk: 4,\n      isTokenOnly: true,\n      lpSymbol: 'LINK',\n      lpAddresses: {\n        97: '',\n        56: '0x00C4849E82D574B02f43c0F84b131dCC9cAbFC49', // LINK-BUSD LP\n      },\n      tokenSymbol: 'LINK',\n      tokenAddresses: contracts.link,\n      quoteTokenSymbol: QuoteToken.BUSD,\n      quoteTokenAdresses: contracts.busd,\n    },\n  ],\n}\n\nconst farms: FarmConfig[] = editionFarms[edition.key]\n\nexport default farms\n","import { AbiItem } from 'web3-utils'\nimport BigNumber from 'bignumber.js'\nimport { capitalize } from 'lodash'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport { edition } from 'edition'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract(edition.masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const methodName = `pending${capitalize(edition.tokenKeyMasterChef)}`\n  const pendingReward = await masterChefContract.methods[methodName]('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useEffect, useState } from 'react'\nimport { useReferralContract } from './useContract'\n\nconst useReferrals = () => {\n  const { account } = useWallet()\n  const referralContract = useReferralContract()\n  const [referralsCount, setReferralsCount] = useState<number | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    if (account) {\n      referralContract.methods\n        .referralsCount(account)\n        .call()\n        .then(setReferralsCount)\n        .finally(() => setLoading(false))\n    }\n  }, [account, referralContract])\n\n  return {\n    referralsCount,\n    loading,\n  }\n}\n\nexport default useReferrals\n","import React from 'react'\nimport { Card, CardBody, Spinner } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useReferrals from 'hooks/useReferral'\nimport { edition } from 'edition'\n\nconst StyledReferralCard = styled(Card)`\n  text-align: center;\n`\n\nconst ReferralCard = () => {\n  const { account } = useWallet()\n  const referrals = useReferrals()\n\n  if (referrals.loading) {\n    return <Spinner logoUrl={edition.logoUrl} />\n  }\n\n  return (\n    <StyledReferralCard>\n      <CardBody>\n        {account ? (\n          <>\n            <h1 style={{ fontSize: 24, marginBottom: 32 }}>Your Referral Link</h1>\n            <p>\n              https://{edition.key}.worldswap.finance/?ref={account}\n            </p>\n            <h1 style={{ fontSize: 24, marginTop: 32, marginBottom: 16 }}>Total Referrals</h1>\n            <p>{referrals?.referralsCount}</p>\n          </>\n        ) : (\n          <>\n            <UnlockButton />\n            <p style={{ marginTop: 16 }}>Unlock wallet to get your unique referral link.</p>\n          </>\n        )}\n      </CardBody>\n    </StyledReferralCard>\n  )\n}\n\nexport default ReferralCard\n","import { Heading } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport React from 'react'\nimport ReferralCard from './components/ReferralCard'\n\nconst Referrals: React.FC = () => {\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Referral Program\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Share the referral link below with your friends and earn 10% of your friend&#39;s earnings forever!\n      </Heading>\n      <ReferralCard />\n    </Page>\n  )\n}\n\nexport default Referrals\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { WorldSwapTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends WorldSwapTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={dark}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry, getMenuLinks } from '@pancakeswap-libs/uikit'\nimport { edition } from 'edition'\n\nconst config: MenuEntry[] = getMenuLinks(edition as any)\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { edition } from 'edition'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      logoText={edition.logoText}\n      logoUrl={edition.logoUrl}\n      isDark\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink={edition.priceLink}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner logoUrl=\"\" />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Nft } from './types'\n\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n    previewImage: 'swapsies-preview.png',\n    blurImage: 'swapsies-blur.png',\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n    previewImage: 'drizzle-preview.png',\n    blurImage: 'drizzle-blur.png',\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n    previewImage: 'blueberries-preview.png',\n    blurImage: 'blueberries-blur.png',\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n    previewImage: 'circular-preview.png',\n    blurImage: 'circular-blur.png',\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n    previewImage: 'sparkle-preview.png',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import React, { useEffect, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\n\ninterface NftYouWonModalProps {\n  onDismiss?: () => void\n}\n\nconst ModalContent = styled.div`\n  padding: 24px;\n  text-align: center;\n`\n\nconst Actions = styled.div`\n  text-align: center;\n`\n\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <ModalContent>\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\n        <Heading size=\"lg\" color=\"secondary\">\n          {TranslateString(999, 'You won an NFT!')}\n        </Heading>\n      </ModalContent>\n      <Actions>\n        <Button as=\"a\" href=\"/nft\">\n          {TranslateString(999, 'Go to claim NFT')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\n/**\n * 1. Checks if nft supply available\n * 2. If supply is available check if the user can claim\n * 3. If the user can claim show a modal\n */\nconst NftGlobalNotification = () => {\n  const { account } = useWallet()\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\n  const showModal = useRef(() => onPresentBurnModal())\n\n  useEffect(() => {\n    const checkNftStatus = async () => {\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\n        rabbitmintingfarm,\n        [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ],\n      )\n\n      // TODO: Figure out why these values are coming back as an array\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n      const [canClaim]: [boolean] = canClaimArr\n      const [hasClaimed]: [boolean] = hasClaimedArr\n\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\n        showModal.current()\n      }\n    }\n\n    if (account && !document.location.href.includes('/nft')) {\n      checkNftStatus()\n    }\n  }, [account, showModal])\n\n  return <div />\n}\n\nexport default NftGlobalNotification\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport Referrals from 'views/Referrals'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  // Save referral url\n  useEffect(() => {\n    const ref = new URLSearchParams(window.location.search).get('ref')\n    if (ref) {\n      localStorage.setItem('ref', ref)\n    }\n  }, [])\n\n  useFetchPublicData()\n\n  return (\n    <Router basename=\"/\">\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/referrals\">\n              <Referrals />\n            </Route>\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <NftGlobalNotification />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(abi as unknown as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}